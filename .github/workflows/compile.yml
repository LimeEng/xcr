# Testing compilation
name: Compile

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository (<owner>/<repo>)'
        required: true

jobs:
  extract-info:
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.tag.outputs.version_tag }}
      crate_version: ${{ steps.tag.outputs.crate_version }}
      crate_name: ${{ steps.tag.outputs.crate_name }}
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.repo }}
      - name: Extract info
        id: tag
        # https://github.com/rust-cli/meta/issues/33
        # Thanks ashutoshrishi!
        run: |
          echo "Repository: ${{ github.event.inputs.repo }}"

          CRATE_VERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml)
          CRATE_VERSION="v${CRATE_VERSION}"
          CRATE_NAME=$(awk -F ' = ' '$1 ~ /name/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml)

          echo "Detected crate: ${CRATE_NAME}@${CRATE_VERSION}"

          echo "::set-output name=version_tag::0.1.0"
          echo "::set-output name=crate_version::${CRATE_VERSION}"
          echo "::set-output name=crate_name::${CRATE_NAME}"

  delete-assets:
    runs-on: ubuntu-latest
    needs: extract-info
    steps:
      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{needs.extract-info.outputs.version_tag}}
          assets: '*'
          fail-if-no-assets: false
          fail-if-no-release: false

  upload-assets:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          # TODO: Fix duplication of binary name
          - os: ubuntu-latest
            artifact_name: ${{needs.extract-info.outputs.crate_name}} # File name of cargo generated binary
            asset_name: ${{needs.extract-info.outputs.crate_name}}-${{needs.extract-info.outputs.crate_version}}-linux-amd64 # Name of asset uploaded to Github
          - os: windows-latest
            artifact_name: ${{needs.extract-info.outputs.crate_name}}.exe # File name of cargo generated binary
            asset_name: ${{needs.extract-info.outputs.crate_name}}-${{needs.extract-info.outputs.crate_version}}-windows-amd64 # Name of asset uploaded to Github
          - os: macos-latest
            artifact_name: ${{needs.extract-info.outputs.crate_name}} # File name of cargo generated binary
            asset_name: ${{needs.extract-info.outputs.crate_name}}-${{needs.extract-info.outputs.crate_version}}-macos-amd64 # Name of asset uploaded to Github

    name: Upload assets for ${{ matrix.os }}
    needs: [extract-info, delete-assets]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        repository: ${{ github.event.inputs.repo }}
    - name: Install latest stable
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    - name: Build
      run: cargo build --release
    - name: Upload binary to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: ${{needs.extract-info.outputs.version_tag}}
        release_name: ${{needs.extract-info.outputs.version_tag}}
